<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   version="1.1"
   viewBox="0.00 0.00 800.00 600.00"
   id="svg142"
   sodipodi:docname="Dever - Modern Gradient Fire (1).svg"
   inkscape:version="1.3.1 (91b66b0783, 2023-11-16)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs142">
    <linearGradient
       id="linearGradient150">
      <stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop153" />
      <stop
         style="stop-color:#000000;stop-opacity:0;"
         offset="1"
         id="stop154" />
    </linearGradient>
    <linearGradient
       id="linearGradient150-1">
      <stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop151" />
      <stop
         style="stop-color:#000000;stop-opacity:0;"
         offset="1"
         id="stop152" />
    </linearGradient>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient161"
       gradientUnits="userSpaceOnUse"
       x="-0.72202164"
       y="0.72202164">
      <meshrow
         id="meshrow161">
        <meshpatch
           id="meshpatch161">
          <stop
             path="c 267.389,0  534.777,0  802.166,0"
             style="stop-color:#6f374a;stop-opacity:1"
             id="stop162" />
          <stop
             path="c 0,199.759  0,399.519  0,599.278"
             style="stop-color:#000330;stop-opacity:1"
             id="stop163" />
          <stop
             path="c -267.389,0  -534.777,0  -802.166,0"
             style="stop-color:#083acd;stop-opacity:1"
             id="stop164" />
          <stop
             path="c 0,-199.759  0,-399.519  0,-599.278"
             style="stop-color:#75004b;stop-opacity:1"
             id="stop165" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <sodipodi:namedview
     id="namedview142"
     pagecolor="#505050"
     bordercolor="#eeeeee"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#505050"
     inkscape:zoom="1.385"
     inkscape:cx="400"
     inkscape:cy="300"
     inkscape:window-width="1920"
     inkscape:window-height="1027"
     inkscape:window-x="1272"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg142" />
  <rect
     style="fill:url(#meshgradient161);fill-opacity:1"
     id="rect160"
     width="802.16608"
     height="599.27795"
     x="-0.72202164"
     y="0.72202164"
     inkscape:label="rect160" />
  <path
     fill="#e52323"
     d="   M 655.52 293.23   C 634.97 317.28 611.34 337.75 585.59 356.67   C 585.28 354.73 585.15 353.27 586.59 351.74   Q 600.08 337.41 613.72 322.91   A 0.10 0.10 0.0 0 0 613.65 322.75   L 601.76 322.74   A 0.48 0.45 -66.0 0 0 601.40 322.89   L 581.19 344.67   A 0.38 0.37 -44.5 0 1 580.64 344.67   L 569.82 332.92   C 584.87 321.45 595.50 312.85 608.09 301.12   C 628.17 282.43 646.69 261.11 659.05 236.50   C 664.71 225.23 668.75 212.34 669.19 200.01   Q 670.21 171.76 647.09 153.52   Q 636.43 145.11 623.31 140.52   Q 623.09 140.44 623.16 140.22   L 623.16 140.21   Q 623.22 140.00 623.44 140.05   Q 631.73 142.03 640.05 144.68   C 665.26 152.70 689.78 170.51 694.25 198.31   C 697.63 219.26 690.42 240.76 679.77 259.27   Q 669.30 277.46 655.52 293.23   Z"
     id="path111" />
  <path
     fill="#f7feff"
     d="   M 188.23 276.76   Q 176.43 276.73 164.66 276.77   Q 159.65 276.78 157.58 275.50   Q 154.08 273.32 154.05 268.24   Q 153.99 260.37 154.00 252.44   Q 153.98 246.28 154.01 240.09   Q 154.04 235.06 155.05 233.08   Q 156.97 229.30 162.00 229.28   Q 186.09 229.21 208.75 229.27   Q 217.34 229.29 217.34 238.25   Q 217.34 252.42 217.26 266.58   C 217.23 270.98 216.70 274.10 212.87 275.98   Q 211.34 276.74 208.51 276.74   Q 198.34 276.76 188.23 276.76   Z   M 208.3909 241.1697   A 3.38 3.38 0.0 0 0 205.0168 237.7838   L 166.3369 237.7163   A 3.38 3.38 0.0 0 0 162.9510 241.0904   L 162.9091 265.0703   A 3.38 3.38 0.0 0 0 166.2832 268.4562   L 204.9631 268.5237   A 3.38 3.38 0.0 0 0 208.3490 265.1496   L 208.3909 241.1697   Z"
     id="path113" />
  <path
     fill="#f7feff"
     d="   M 265.72 261.08   L 234.05 261.06   Q 233.53 261.06 233.53 261.58   L 233.50 271.00   L 233.55 275.44   Q 233.56 276.75 232.24 276.75   L 225.62 276.75   Q 224.50 276.75 224.50 275.62   L 224.50 253.03   Q 224.50 252.54 224.98 252.54   L 229.82 252.47   Q 247.39 252.50 264.71 252.49   Q 269.90 252.49 271.57 251.29   C 275.16 248.71 275.34 240.82 270.59 238.65   Q 268.97 237.92 265.59 237.94   Q 244.92 238.08 225.08 237.97   Q 224.46 237.97 224.49 237.35   Q 224.96 229.24 232.75 229.24   Q 250.12 229.24 266.98 229.31   Q 281.73 229.38 282.98 243.73   C 284.01 255.60 276.54 260.59 265.72 261.08   Z"
     id="path114" />
  <path
     fill="#f7feff"
     d="   M 431.99 229.28   Q 447.86 229.20 463.83 229.26   Q 469.50 229.28 471.13 230.24   Q 474.41 232.18 474.69 237.15   Q 474.73 237.74 474.13 237.74   Q 455.39 237.78 435.00 237.76   Q 431.59 237.75 429.43 238.56   Q 424.24 240.97 424.04 246.76   Q 423.89 251.11 424.12 259.00   Q 424.39 268.31 433.75 268.30   Q 439.79 268.30 445.77 268.22   L 474.12 268.26   Q 474.73 268.26 474.70 268.88   Q 474.42 273.80 471.52 275.71   Q 469.83 276.83 464.56 276.77   Q 459.12 276.71 453.76 276.78   Q 442.36 276.70 431.00 276.54   Q 423.50 276.43 419.18 271.30   C 414.32 265.53 414.99 257.56 415.02 250.34   Q 415.05 244.34 415.82 241.49   Q 418.83 230.31 431.99 229.28   Z"
     id="path115" />
  <path
     fill="#f7feff"
     d="   M 306.97 229.47   L 345.01 229.48   Q 345.31 229.48 345.32 229.79   L 345.33 237.64   A 0.37 0.37 0.0 0 1 344.96 238.01   L 309.22 238.04   L 287.74 237.99   A 0.45 0.45 0.0 0 1 287.29 237.54   L 287.31 229.95   Q 287.31 229.49 287.77 229.49   L 306.97 229.47   Z"
     id="path116" />
  <path
     fill="#f7feff"
     d="   M 365.58 229.48   L 409.02 229.49   Q 409.33 229.49 409.33 229.79   L 409.35 237.66   Q 409.35 238.00 409.01 238.00   L 370.72 238.02   L 351.73 237.99   A 0.43 0.42 -0.0 0 1 351.30 237.57   L 351.32 229.79   Q 351.32 229.49 351.62 229.49   L 365.58 229.48   Z"
     id="path117" />
  <path
     fill="#f7feff"
     d="   M 320.77 250.00   L 320.72 276.10   Q 320.72 276.75 320.07 276.75   L 312.51 276.75   Q 311.86 276.75 311.86 276.10   L 311.94 248.97   L 320.22 248.75   Q 320.77 248.74 320.77 249.29   L 320.77 250.00   Z"
     id="path119" />
  <path
     fill="#f7feff"
     d="   M 375.87 248.73   L 384.28 248.80   Q 384.77 248.80 384.77 249.29   L 384.78 267.76   Q 384.78 268.25 385.26 268.25   L 409.06 268.25   Q 409.35 268.25 409.35 268.54   L 409.33 276.48   A 0.28 0.28 0.0 0 1 409.05 276.76   L 394.05 276.76   L 351.78 276.75   Q 351.31 276.75 351.31 276.28   L 351.30 268.72   Q 351.30 268.25 351.78 268.25   L 375.28 268.25   Q 375.83 268.25 375.83 267.69   L 375.87 248.73   Z"
     id="path120" />
  <path
     fill="#f7feff"
     d="   M 217.15 328.90   L 217.31 331.55   Q 217.31 345.46 217.26 359.38   C 217.24 364.00 216.82 367.53 212.78 369.48   Q 211.17 370.26 208.09 370.26   Q 186.12 370.25 164.17 370.26   Q 159.65 370.27 157.57 369.04   Q 154.08 366.99 154.05 362.49   Q 153.96 348.98 153.99 334.48   Q 154.00 328.53 155.10 326.60   Q 157.25 322.79 163.24 322.74   Q 189.24 322.53 209.50 322.79   Q 215.33 322.87 217.15 328.90   Z   M 208.37 334.35   A 3.35 3.35 0.0 0 0 205.02 331.00   L 166.28 331.00   A 3.35 3.35 0.0 0 0 162.93 334.35   L 162.93 358.39   A 3.35 3.35 0.0 0 0 166.28 361.74   L 205.02 361.74   A 3.35 3.35 0.0 0 0 208.37 358.39   L 208.37 334.35   Z"
     id="path124" />
  <path
     fill="#f7feff"
     d="   M 267.62 322.69   Q 269.04 322.94 270.71 323.12   C 278.91 323.97 284.11 329.07 285.05 337.38   Q 285.55 341.88 285.43 350.75   Q 285.35 356.03 284.06 359.77   C 281.65 366.80 275.13 370.10 268.00 370.21   Q 261.11 370.31 247.49 370.17   L 225.08 369.92   Q 224.58 369.91 224.58 369.41   L 224.52 342.65   L 232.97 342.29   Q 233.46 342.27 233.46 342.76   L 233.45 361.20   Q 233.45 361.71 233.97 361.72   Q 249.01 361.76 265.99 361.75   C 271.33 361.74 276.10 359.26 276.36 353.40   Q 276.60 348.08 276.44 340.49   Q 276.24 331.28 266.80 331.27   Q 244.71 331.23 225.08 331.28   Q 224.55 331.28 224.54 330.75   Q 224.44 322.73 232.25 322.75   Q 249.74 322.78 267.62 322.69   Z"
     id="path125" />
  <path
     fill="#f7feff"
     d="   M 292.03 322.75   L 349.76 322.75   A 0.26 0.26 0.0 0 1 350.02 323.01   L 350.02 330.99   A 0.28 0.27 -0.0 0 1 349.74 331.26   L 304.80 331.27   L 292.58 331.17   Q 292.08 331.16 292.08 330.66   L 292.03 322.75   Z"
     id="path126" />
  <path
     fill="#f7feff"
     d="   M 402.90 369.92   Q 384.37 370.07 365.69 369.98   Q 360.63 369.96 359.12 368.85   Q 356.19 366.68 356.23 362.06   Q 356.23 361.49 356.80 361.49   Q 379.64 361.51 402.50 361.48   Q 403.51 361.48 404.56 360.58   C 407.82 357.76 406.53 350.52 401.42 350.51   Q 386.08 350.49 370.76 350.47   Q 354.40 350.45 355.89 334.23   Q 356.72 325.12 366.61 322.94   Q 396.64 322.40 406.50 322.76   Q 414.12 323.04 413.95 330.72   Q 413.94 331.23 413.43 331.23   Q 393.41 331.28 371.69 331.23   C 367.26 331.22 364.36 331.71 364.40 336.77   C 364.44 341.68 367.72 342.18 371.66 342.21   Q 385.95 342.30 400.25 342.29   C 407.37 342.29 413.46 345.14 414.64 352.96   C 415.93 361.50 412.30 369.11 402.90 369.92   Z"
     id="path127" />
  <path
     fill="#f7feff"
     d="   M 477.99 350.01   Q 479.06 353.69 478.96 356.25   Q 478.43 369.71 465.00 369.88   Q 461.11 369.93 456.47 370.13   Q 443.55 369.91 429.99 370.01   Q 425.14 370.04 423.21 368.79   Q 420.07 366.75 420.27 362.00   Q 420.30 361.50 420.79 361.50   Q 443.52 361.49 466.25 361.49   C 470.76 361.49 471.30 354.36 468.60 351.65   Q 467.47 350.51 464.37 350.51   Q 449.16 350.50 434.01 350.50   C 426.66 350.50 420.80 346.99 419.92 339.27   Q 419.46 335.22 420.49 331.19   C 422.43 325.34 427.87 322.87 433.67 322.82   Q 451.77 322.66 469.69 322.77   Q 478.16 322.82 477.94 330.72   Q 477.93 331.23 477.42 331.23   Q 457.34 331.26 436.95 331.26   C 432.56 331.26 429.26 330.74 428.52 335.49   C 427.56 341.58 431.65 342.21 436.59 342.22   Q 450.17 342.26 463.75 342.19   C 469.71 342.16 475.60 344.14 477.99 350.01   Z"
     id="path128" />
  <path
     fill="#f7feff"
     d="   M 489.47 331.25   Q 484.05 331.86 485.32 329.53   Q 486.44 322.77 492.49 322.76   Q 517.89 322.72 543.00 322.74   A 0.27 0.27 0.0 0 1 543.27 323.01   L 543.26 330.99   A 0.26 0.26 0.0 0 1 543.00 331.25   L 489.47 331.25   Z"
     id="path129" />
  <path
     fill="#f7feff"
     d="   M 569.82 332.92   L 580.64 344.67   A 0.38 0.37 -44.5 0 0 581.19 344.67   L 601.40 322.89   A 0.48 0.45 -66.0 0 1 601.76 322.74   L 613.65 322.75   A 0.10 0.10 0.0 0 1 613.72 322.91   Q 600.08 337.41 586.59 351.74   C 585.15 353.27 585.28 354.73 585.59 356.67   L 585.61 368.62   Q 585.61 370.00 584.23 370.00   L 577.58 370.00   Q 576.21 370.00 576.21 368.63   L 576.23 363.30   L 576.26 353.52   Q 576.26 353.01 575.92 352.64   L 562.51 338.26   L 548.11 322.86   A 0.07 0.06 -21.7 0 1 548.16 322.75   Q 554.20 322.71 560.18 322.76   Q 560.45 322.76 560.63 322.96   L 569.82 332.92   Z"
     id="path130" />
  <path
     fill="#e52323"
     d="   M 562.51 338.26   L 575.92 352.64   Q 576.26 353.01 576.26 353.52   L 576.23 363.30   Q 545.13 384.94 512.01 402.75   Q 477.89 421.01 442.18 436.00   Q 417.44 446.43 392.02 454.86   Q 359.57 465.82 326.24 473.46   Q 297.25 479.97 267.73 483.55   Q 262.11 484.23 255.62 484.90   Q 230.02 487.19 205.25 486.41   Q 186.61 485.83 167.13 481.90   Q 156.21 479.50 149.01 477.21   Q 135.72 472.99 123.17 465.28   C 103.06 452.92 91.40 432.84 92.32 408.95   C 93.55 389.78 101.21 371.65 111.22 355.72   Q 111.33 355.54 111.52 355.64   L 111.53 355.64   Q 111.67 355.72 111.61 355.87   Q 107.61 364.81 105.52 374.52   C 100.96 395.65 106.00 415.94 122.33 430.58   Q 133.94 440.99 148.71 446.57   Q 170.40 454.76 193.53 456.68   C 200.68 457.23 207.98 457.90 214.94 457.96   Q 251.75 458.29 288.02 452.20   L 327.76 444.28   Q 353.41 438.09 378.47 429.83   L 400.80 422.13   Q 437.58 408.93 472.06 391.52   Q 492.54 381.53 512.65 370.06   L 542.99 370.01   A 0.27 0.27 0.0 0 0 543.26 369.74   L 543.27 361.76   A 0.29 0.29 0.0 0 0 542.98 361.47   L 527.46 361.43   L 562.51 338.26   Z"
     id="path131" />
  <path
     fill="#f7feff"
     d="   M 349.89 370.01   L 292.29 370.00   A 0.26 0.26 0.0 0 1 292.03 369.74   L 292.02 361.74   Q 292.02 361.50 292.26 361.50   L 316.02 361.50   Q 316.55 361.50 316.53 360.97   L 316.48 359.47   L 316.53 342.66   Q 316.53 342.24 316.95 342.24   L 325.25 342.24   Q 325.51 342.24 325.51 342.50   L 325.51 361.25   A 0.24 0.24 0.0 0 0 325.75 361.49   L 349.47 361.49   Q 349.97 361.49 349.97 362.00   L 349.89 370.01   Z"
     id="path132" />
  <path
     fill="#f7feff"
     d="   M 492.18 342.23   L 542.99 342.24   Q 543.27 342.24 543.27 342.52   L 543.26 350.25   A 0.26 0.26 0.0 0 1 543.00 350.51   L 494.85 350.51   Q 494.22 350.51 494.22 351.15   L 494.21 360.80   Q 494.21 361.44 494.85 361.44   L 527.46 361.43   L 542.98 361.47   A 0.29 0.29 0.0 0 1 543.27 361.76   L 543.26 369.74   A 0.27 0.27 0.0 0 1 542.99 370.01   L 512.65 370.06   L 485.57 370.01   A 0.34 0.33 0.0 0 1 485.23 369.68   L 485.23 344.70   L 485.27 342.85   Q 485.28 342.32 485.80 342.31   L 492.18 342.23   Z"
     id="path133" />
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
